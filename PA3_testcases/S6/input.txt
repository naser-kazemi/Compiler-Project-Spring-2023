/*==== sample S6  ====*/

int factorial(int num) {
    int result;
    int i;
    void j;
    int x[10];
    result = 1;
    i = num;
    k = num;
    repeat {
        result = i * result;
        i = i - 1;
    } until (1 < i)
    return result * x;
}

int is1prime(int num) {
    int i;
    i = 2;
    if (num <= 1) {
        return 0;
        break;
    } else {
        output(2);
    }
    repeat {
        if (num - i == 0) {
            return 0;
        } else {
            output(6);
        }
        i = i + 1;
    } until (i < num )
    return 1;
}

int fibonacci(int n) {
    if (n <= 1) {
        break;
        return n;
    } else {
        output(3);
    }
    return fibonacci(n-1, n) + fibonacci(n-2);
}

void main(void) {
    int n;
    int arr[4];
    int num1;
    int num2;
    int result;
    result = num1 + arr;
    result = num1 + num2;

    if (num2 == 0) {
        output(num2);
    } else {
        output(num1 + num2);
    }

    if (num2 == 0) {
        break;
        output(0);
    } else {
        output(1);
    }


    if (is1prime(num2, num1)) {
        output(2);
    } else {
        output(3);
    }

    n = fibonacci(arr);
}
